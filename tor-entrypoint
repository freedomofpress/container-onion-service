#!/bin/bash
# Runs a Tor Onion Service based on env vars.
# Intended for use in a container image.
set -e
set -u
set -o pipefail


TOR_ONION_NAME="${TOR_ONION_NAME:-onion1}"
TOR_ONION_HOSTNAME="${TOR_ONION_HOSTNAME:-}"
TOR_ONION_V3_PUBLIC_KEY="${TOR_ONION_V3_PUBLIC_KEY:-}"
TOR_ONION_V3_SECRET_KEY="${TOR_ONION_V3_SECRET_KEY:-}"
TOR_ONION_REMOTE_PORT="${TOR_ONION_REMOTE_PORT:-}"
WEB_FRONTEND_HOST="${WEB_FRONTEND_HOST:-}"


if [[ -z "$TOR_ONION_HOSTNAME" ||
      -z "$TOR_ONION_V3_PUBLIC_KEY" ||
      -z "$TOR_ONION_V3_SECRET_KEY" ||
      -z "$TOR_ONION_REMOTE_PORT" ||
      -z "$WEB_FRONTEND_HOST" ]]; then
      echo "ERROR: Set TOR_ONION_HOSTNAME, TOR_ONION_V3_{PUBLIC,SECRET}_KEY, TOR_ONION_REMOTE_PORT, WEB_FRONTEND_HOST"
      exit 1
fi

tor_service_dir="/var/lib/tor/${TOR_ONION_NAME}"
tor_client_auth_dir="${tor_service_dir}/authorized_clients"
mkdir -p "$tor_service_dir" "$tor_client_auth_dir"
chmod 2700 "$tor_service_dir" "$tor_client_auth_dir"

tor_pubkey="${tor_service_dir}/hs_ed25519_public_key"
tor_seckey="${tor_service_dir}/hs_ed25519_secret_key"

echo "$TOR_ONION_V3_PUBLIC_KEY" | base64 --decode > "$tor_pubkey"
echo "$TOR_ONION_V3_SECRET_KEY" | base64 --decode > "$tor_seckey"

chmod 0600 "$tor_seckey" "$tor_pubkey"

# If we volume-mounted client auth keys, they are here
cp /authorized_clients/*.auth "${tor_client_auth_dir}" || echo "Client auth is not enabled"

cat <<EOF > /var/lib/tor/torrc
HiddenServiceDir /var/lib/tor/${TOR_ONION_NAME}
HiddenServicePort ${TOR_ONION_REMOTE_PORT} ${WEB_FRONTEND_HOST}:80
SocksPort 0
EOF

echo "Verifying config file..."
tor -f /var/lib/tor/torrc --verify-config
echo "Config file verified"

echo "Serving Onion Service: http://${TOR_ONION_HOSTNAME}:${TOR_ONION_REMOTE_PORT}"
exec tor -f /var/lib/tor/torrc
